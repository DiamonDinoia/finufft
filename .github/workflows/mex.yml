name: Build MATLAB MEX

on: [push, pull_request]

jobs:
  # ---------- LINUX (manylinux2014 container; pip cmake+ninja) ----------
  linux-manylinux2014:
    name: Linux (manylinux2014)
    runs-on: ubuntu-22.04
    container:
      image: quay.io/pypa/manylinux2014_x86_64
    steps:
      # Prep container so actions work & tools are available
      - name: Prepare container (git, basics, enable gcc10)
        shell: bash
        run: |
          # Newer GCC if available (ok if no-op)
          source /opt/rh/devtoolset-10/enable || true
          # Pick a Python and add its bin to PATH
          PYBIN_DIR="$(ls -d /opt/python/cp3*-cp3*/bin | sort | tail -n1)"
          echo "Using PYBIN_DIR=$PYBIN_DIR"
          echo "$PYBIN_DIR" >> "$GITHUB_PATH"
          "$PYBIN_DIR/python" -m pip install --upgrade pip
          "$PYBIN_DIR/pip" install cmake ninja

      - uses: actions/checkout@v4

      - name: Set up MATLAB (inside container)
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
          products: MATLAB
          cache: true

      - name: Configure & Build (DUCC0)
        shell: bash
        run: |
          export PATH="${MATLAB_ROOT}/bin:${PATH}"
          cmake -S . -B build -G Ninja \
            -DFINUFFT_USE_CPU=ON \
            -DFINUFFT_USE_DUCC0=ON \
            -DFINUFFT_MATLAB_INSTALL=ON
          cmake --build build --target finufft_mex --parallel

      - name: Run fullmathtest.m
        uses: matlab-actions/run-command@v2
        with:
          command: |
            addpath(genpath('matlab'));
            addpath(genpath('build'));
            fullmathtest

      - name: Package with CPack
        shell: bash
        run: |
          cmake --build build --target package
          ls -l build/*.zip build/*.tar.gz 2>/dev/null || true

      - uses: actions/upload-artifact@v4
        with:
          name: finufft-matlab-mex-linux-manylinux2014
          path: |
            build/*.zip
            build/*.tar.gz
          if-no-files-found: error

  # ---------- WINDOWS ----------
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup C++ toolchain
        uses: aminya/setup-cpp@v1.7.1
        with:
          cmake: true
          ninja: true
          vcvarsall: true
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
          products: MATLAB
          cache: true
      - name: Configure & Build (DUCC0)
        shell: bash
        run: |
          cmake -S . -B build -G Ninja \
            -DFINUFFT_USE_CPU=ON \
            -DFINUFFT_USE_DUCC0=ON \
            -DFINUFFT_MATLAB_INSTALL=ON
          cmake --build build --target finufft_mex --parallel
      - name: Run fullmathtest.m
        uses: matlab-actions/run-command@v2
        with:
          command: |
            addpath(genpath('matlab'));
            addpath(genpath('build'));
            fullmathtest
      - name: Package with CPack
        shell: bash
        run: cmake --build build --target package
      - uses: actions/upload-artifact@v4
        with:
          name: finufft-matlab-mex-windows
          path: |
            build/*.zip
            build/*.tar.gz
          if-no-files-found: error

  # ---------- macOS ----------
  macos:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Setup C++ toolchain
        uses: aminya/setup-cpp@v1.7.1
        with:
          cmake: true
          ninja: true
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
          products: MATLAB
          cache: true
      - name: Install libomp and env
        shell: bash
        run: |
          export HOMEBREW_NO_ANALYTICS=1 HOMEBREW_NO_INSTALL_CLEANUP=1
          brew install libomp
          {
            echo "LDFLAGS=-L$(brew --prefix libomp)/lib"
            echo "CPPFLAGS=-I$(brew --prefix libomp)/include"
            echo "LIBRARY_PATH=$(brew --prefix libomp)/lib"
            echo "DYLD_LIBRARY_PATH=$(brew --prefix libomp)/lib"
            echo "CMAKE_PREFIX_PATH=$(brew --prefix libomp)"
            echo "MAC_TARGETS=12.0 13.0"
          } >> "$GITHUB_ENV"
      - name: Configure & Build (per target)
        shell: bash
        run: |
          for tgt in ${MAC_TARGETS}; do
            bdir="build_mac_${tgt}"
            cmake -S . -B "${bdir}" -G Ninja \
              -DFINUFFT_USE_CPU=ON \
              -DFINUFFT_USE_DUCC0=ON \
              -DFINUFFT_MATLAB_INSTALL=ON \
              -DCMAKE_OSX_DEPLOYMENT_TARGET="${tgt}"
            cmake --build "${bdir}" --target finufft_mex --parallel
          done
      - name: Run fullmathtest.m (per target)
        uses: matlab-actions/run-command@v2
        with:
          command: |
            addpath(genpath('matlab'));
            targets = regexp(getenv('MAC_TARGETS'), '\s+', 'split');
            for i = 1:numel(targets)
              tgt = strtrim(targets{i});
              addpath(genpath(fullfile('build_mac_', tgt)));
              fullmathtest;
            end
      - name: Package with CPack (per target)
        shell: bash
        run: |
          for tgt in ${MAC_TARGETS}; do
            cmake --build "build_mac_${tgt}" --target package
          done
      - uses: actions/upload-artifact@v4
        with:
          name: finufft-matlab-mex-macos
          path: build_mac_*/finufft-matlab-mex-macos-*.tar.gz
          if-no-files-found: error
