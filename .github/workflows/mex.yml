name: Build MATLAB MEX

on: [push, pull_request]

jobs:
  mex:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
          - os: windows-2022
          - os: macos-13
          - os: macos-14
          - os: macos-15
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup C++ toolchain
        uses: aminya/setup-cpp@v1.7.1
        with:
          cmake: true
          ninja: true
          vcvarsall: true
      - name: Set macOS deployment target
        if: runner.os == 'macOS'
        shell: bash
        run: |
          brew install fftw libomp
          echo "LDFLAGS=-L$(brew --prefix libomp)/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(brew --prefix libomp)/include" >> $GITHUB_ENV
          echo "LIBRARY_PATH=$(brew --prefix libomp)/lib" >> $GITHUB_ENV
          echo "DYLD_LIBRARY_PATH=$(brew --prefix libomp)/lib" >> $GITHUB_ENV
          echo "CMAKE_PREFIX_PATH=$(brew --prefix):$(brew --prefix libomp)" >> $GITHUB_ENV
          ver="${{ matrix.os }}"; ver="${ver#macos-}"
          echo "MACOSX_DEPLOYMENT_TARGET=${ver}.0" >> "$GITHUB_ENV"

      # Install CUDA on non-macOS runners
      - name: Install CUDA Toolkit (non-macOS)
        if: runner.os != 'macOS'
        uses: Jimver/cuda-toolkit@v0.2.21
        with:
          cuda: '12.4.0'
          method: 'local'
          linux-local-args: '["--toolkit"]'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
          products: MATLAB
          cache: true

      - name: Configure & Build
        shell: bash
        run: |
          # Ensure MATLAB is on PATH if provided by setup-matlab
          if [ -n "${MATLAB_ROOT:-}" ]; then export PATH="${MATLAB_ROOT}/bin:${PATH}"; fi

          # Enable CUDA only on non-macOS
          CUDA_FLAG=""
          if [ "${RUNNER_OS}" != "macOS" ]; then
            CUDA_FLAG="-DFINUFFT_USE_CUDA=ON"
            # Optional: show nvcc version for debugging
            if command -v nvcc >/dev/null 2>&1; then nvcc --version || true; fi
          fi

          cmake -S . -B build -G Ninja \
            -DFINUFFT_USE_DUCC0=ON \
            -DFINUFFT_USE_OPENMP=ON \
            -DFINUFFT_MATLAB_INSTALL=ON \
            ${CUDA_FLAG}

          cmake --build build --target finufft_mex --parallel

      - name: Run fullmathtest.m
        uses: matlab-actions/run-command@v2
        with:
          command: |
            addpath(genpath('matlab'));
            addpath(genpath('build'));
            fullmathtest

      - name: Package with CPack
        shell: bash
        run: cmake --build build --target package

      - uses: actions/upload-artifact@v4
        with:
          name: finufft-matlab-mex-${{ matrix.os }}
          path: |
            build/*.zip
            build/*.tar.gz
          if-no-files-found: error
